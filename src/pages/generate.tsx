import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import { api } from "~/utils/api";
import { Input } from "~/component/Input";
import { FormGroup } from "~/component/FormGroup";
import { useState } from "react";
import { Button } from "~/component/Button";
import Image from "next/image";


const GeneratePage: NextPage = () => {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });

  const [form, setForm] = useState({
    prompt: ""
  });
  const [imageUrl, setImageUrl] = useState('');

  const generateIcon = api.generate.generateIcon.useMutation({
    onSuccess(data) {
      if (!data.imageUrl) return;
      setImageUrl(data.imageUrl);
    }
  });

  function handleFormSubmit(e: React.FormEvent) {
    e.preventDefault();
    generateIcon.mutate({
      prompt: form.prompt,
    });
    setForm({ prompt: "" });
  }

  function updateForm(key: string) {
    return function(e: React.ChangeEvent<HTMLInputElement>) {
      setForm({ ...form, [key]: e.target.value });
    };
  }

  const session = useSession();
  const isLoggedIn = !!session.data;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        {isLoggedIn ?
          <Button onClick={() => signOut().catch(console.error)}>
            Logout
          </Button>
          : <Button onClick={() => signIn().catch(console.error)}>
            Login
          </Button>}

        <form
          onSubmit={handleFormSubmit}
          className="flex flex-col gap-4">
          <FormGroup>
            <label>Prompt</label>
            <Input
              value={form.prompt}
              onChange={updateForm("prompt")}></Input>
          </FormGroup>
          <Button>Submit</Button>
        </form>
        <img src={`data:image/png;base64,${imageUrl}`} width="100" height="100" alt="generated img from prompt" />
      </main>
    </>
  );
};

export default GeneratePage;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
